class ConsoleIntern : Any
{
    maide prudate Bool Init()
    {
        base.Init();
        this.InternIntern : share InternIntern;
        this.Extern : share Extern;
        this.InternInfra : share InternInfra;
        this.Intern : 0;
        return true;
    }

    field private InternIntern InternIntern { get { return data; } set { data : value; } }
    field private Extern Extern { get { return data; } set { data : value; } }
    field private InternInfra InternInfra { get { return data; } set { data : value; } }
    field private Int Intern { get { return data; } set { data : value; } }

    maide prudate Bool Write(var Int stream, var String a)
    {
        var Bool b;
        b : (stream = 0);
        inf (b)
        {
            this.OutWrite(a);
        }
        inf (!b)
        {
            this.ErrWrite(a);
        }
        return true;
    }


    maide prudate Bool OutWrite(var String a)
    {
        var Int uo;
        uo : this.InternInfra.StringCreate(a);
        
        this.Extern.Console_OutWrite(this.Intern, uo);

        this.InternInfra.StringDelete(uo);
        return true;
    }

    maide prudate Bool ErrWrite(var String a)
    {
        var Int uo;
        uo : this.InternInfra.StringCreate(a);
        
        this.Extern.Console_ErrWrite(this.Intern, uo);

        this.InternInfra.StringDelete(uo);
        return true;
    }

    maide prudate String Read()
    {
        var Extern extern;
        extern : this.Extern;
        
        var Int uu;
        uu : extern.Console_InnRead(this.Intern);

        var Int internReturn;
        internReturn : extern.Return_New();
        extern.Return_Init(internReturn);

        extern.Return_StringSet(internReturn, uu);

        extern.Return_StringStart(internReturn);
        var Int count;
        count : extern.Return_StringCount(internReturn);
        var Int byteCount;
        byteCount : count * 2;
        var Int data;
        data : extern.New(byteCount);
        var Int u;
        u : extern.String_New();
        extern.String_Init(u);
        extern.String_CountSet(u, count);
        extern.String_DataSet(u, data);
        extern.Return_StringResult(internReturn, u);
        extern.Return_StringEnd(internReturn);

        extern.Return_StringSet(internReturn, 0);

        extern.Return_Final(internReturn);
        extern.Return_Delete(internReturn);

        var String a;
        a : this.InternIntern.StringCreate(data, count);

        extern.String_Final(u);
        extern.String_Delete(u);

        extern.Delete(data);
        return a;
    }
}