class Storage : Any
{
    maide prudate Bool Init()
    {
        base.Init();
        this.InternIntern : share InternIntern;
        this.Extern : share Extern;
        this.InternInfra : share InternInfra;
        this.StorageStatusList : share StatusList;
        this.Intern : this.Extern.Storage_New();
        this.Extern.Storage_Init(this.Intern);
        return true;
    }

    maide prudate Bool Final()
    {
        this.Extern.Storage_Final(this.Intern);
        this.Extern.Storage_Delete(this.Intern);
        return true;
    }

    field prudate string Path { get { return data; } set { data : value; } }
    field prudate Mode Mode { get { return data; } set { data : value; } }
    field prudate bool AnyNode { get { return data; } set { data : value; } }
    field prudate StreamStream Stream { get { return data; } set { data : value; } }
    field precate StreamStream DataStream { get { return data; } set { data : value; } }

    field private InternIntern InternIntern { get { return data; } set { data : value; } }
    field private Extern Extern { get { return data; } set { data : value; } }
    field private InternInfra InternInfra { get { return data; } set { data : value; } }
    field precate StatusList StorageStatusList { get { return data; } set { data : value; } }
    
    field private Int Intern { get { return data; } set { data : value; } }
    field private Int InternPath { get { return data; } set { data : value; } }

    field prudate Status Status
    {
        get
        {
            var Int k;
            k : this.Extern.Storage_StatusGet(this.Intern);
            var Status a;
            a : this.StorageStatusList.Get(k);
            return a;
        }
        set
        {
        }
    }

    maide prudate bool Open()
    {
        inf (!(this.Stream == null))
        {
            return true;
        }
        inf (!this.ValidMode(this.Mode))
        {
            return true;
        }

        this.InternPath : this.InternInfra.StringCreate(this.Path);
        var Int modeU;
        modeU : this.InternMode(this.Mode);
        this.DataStream : this.CreateStream();

        this.Extern.Storage_PathSet(this.Intern, this.InternPath);
        this.Extern.Storage_ModeSet(this.Intern, modeU);
        this.Extern.Storage_StreamSet(this.Intern, this.DataStream.Ident);
        this.Extern.Storage_Open(this.Intern);
        inf (this.Status = this.StorageStatusList.NoError)
        {
            this.Stream : this.DataStream;
        }
        return true;
    }

    maide prudate Bool Close()
    {
        this.Extern.Storage_Close(this.Intern);
        this.Extern.Storage_StreamSet(this.Intern, 0);
        this.Extern.Storage_ModeSet(this.Intern, 0);
        this.Extern.Storage_PathSet(this.Intern, 0);

        this.DataStream.Final();
        this.DataStream : null;
        this.Stream : null;

        this.InternInfra.StringDelete(this.InternPath);
        return true;
    }

    maide prudate Bool CountSet(var Int value)
    {
        inf (this.Stream = null)
        {
            return true;
        }

        this.Extern.Storage_CountSet(this.Intern, value);
        return true;
    }

    maide precate Bool ValidMode(var Mode mode)
    {
        inf (!(mode.Read | mode.Write))
        {
            return false;
        }
        inf (mode.New & mode.Exist)
        {
            return false;
        }
        return true;
    }

    maide precate StreamStream CreateStream()
    {
        var Stream a;
        a : new Stream();
        a.Init();
        var StreamStream o;
        o : a;
        return o;
    }

    maide private Int InternMode(var Mode mode)
    {
        var Int varShare;
        varShare : this.Extern.Infra_Share();
        var Int stat;
        stat : this.Extern.Share_Stat(varShare);

        var Int k;
        k : 0;
        inf (mode.Read)
        {
            k = k | this.Extern.Stat_StorageModeRead(stat);
        }
        inf (mode.Write)
        {
            k = k | this.Extern.Stat_StorageModeWrite(stat);
        }
        inf (mode.New)
        {
            k = k | this.Extern.Stat_StorageModeNew(stat);
        }
        inf (mode.Exist)
        {
            k = k | this.Extern.Stat_StorageModeExisting(stat);
        }
        return k;
    }
}